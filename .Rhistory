dev.cur()
matrix(runif(nosim*n), nosim)
nosim <- 1000
n <- 10
matrix(runif(nosim*n), nosim)
m <- matrix(runif(nosim*n), nosim)
apply(m,1,mean)
mm <- apply(m,1,mean)
mm <- apply(m,2,mean)
mm <- apply(m,1,mean)
g <- ggplot(mm) +
geom_bar()
plot(g)
library(ggplot2)
g <- ggplot(mm) +
geom_bar()
plot(g)
mm <- as.data.frame(mm)
g <- ggplot(mm) +
geom_bar()
plot(g)
head(mm)
g <- ggplot(mm, aes(mm)) +
geom_bar()
plot(g)
g <- ggplot(mm, aes(mm)) +
geom_histogram(binwidth = 1000)
plot(g)
g <- ggplot(mm, aes(mm)) +
geom_histogram(binwidth = 10)
plot(g)
g <- ggplot(mm, aes(mm)) +
geom_histogram(binwidth = 1)
plot(g)
g <- ggplot(mm, aes(mm)) +
geom_histogram(binwidth = 0.00001)
plot(g)
g <- ggplot(mm, aes(mm)) +
geom_histogram(binwidth = 0.01)
plot(g)
g <- ggplot(mm, aes(mm)) +
geom_histogram(binwidth = 0.05)
plot(g)
qbinom(6, size = 8, prob = .5)
pbinom(6, size = 8, prob = .5)
round(ppois(10,lambda = 15),2)
qnorm(0.95,mean = 1100, sd = 75)
## This is the analysis for Coursera DataScience Class7 Regression Model Final Project
## Charles 08/15/2017
# Set working directory
setwd("C:/Study/Coursera/1 Data-Science/2 RStudio/7 Class 7/Coursera_DataScience_Class7Regression_FinalProject")
library(UsingR)
library(ggplot2)
library(dplyr)
library(grid)
library(gridExtra)
library(manipulate)
library(olsrr)
# Load data
data(mtcars)
str(mtcars)
head(mtcars)
# Explotary plot
g <- ggplot(mtcars, aes(x=factor(am), y=mpg, fill = factor(am))) +
geom_boxplot() +
xlab('Transmission (0=automatic, 1=manual)') +
ylab('Miles Per Gallon (MPG)')
g
# Fit linear model for am
fitAm <- lm(mpg ~ am, data = mtcars)
summary(fitAm)$coef
summary(fitAm)$adj.r.squared
# Fit linear model for all
fitAll <- lm(mpg ~ ., data = mtcars)
summary(fitAll)$coef
corCars <- cor(mtcars)
data.frame(Cor.mpg = corCars[,which(names(mtcars)=='mpg')], Cor.wt = corCars[,which(names(mtcars)=='wt')])
# Fit try different models
fitTry1 <- lm(mpg ~ wt, data = mtcars)
summary(fitTry1)$coef
summary(fitTry1)$adj.r.squared
fitTry2 <- lm(mpg ~ qsec, data = mtcars)
summary(fitTry2)$coef
summary(fitTry2)$adj.r.squared
fitTry3 <- lm(mpg ~ disp, data = mtcars)
summary(fitTry3)$coef
summary(fitTry3)$adj.r.squared
fit1 <- lm(mpg ~ wt, data = mtcars)
fit2 <- update(fit1, mpg ~ wt + qsec)
fit3 <- update(fit1, mpg ~ wt + qsec + am)
anova(fit1,fit2,fit3)
# Fit new linear model
fitNew <- lm(mpg ~ am + qsec + wt, data = mtcars)
summary(fitNew)$coef
summary(fitNew)$adj.r.squared
par(mfrow = c(2,2))
plot(fitNew)
summary(fitTry2)$adj.r.squared
summary(fitNew)$adj.r.squared
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Study/Coursera/1 Data-Science/2 RStudio/7 Class 7/Coursera_DataScience_Class7Regression_FinalProject")
library(UsingR)
library(ggplot2)
library(dplyr)
library(grid)
library(gridExtra)
setwd("C:/Study/Coursera/1 Data-Science/2 RStudio/7 Class 7/Coursera_DataScience_Class7Regression_FinalProject")
library(UsingR)
library(ggplot2)
library(dplyr)
library(grid)
library(gridExtra)
data(mtcars)
str(mtcars)
head(mtcars)
```{r set environment, results=FLASE}
head(mtcars)
length(mtcars)
alpha <- 0.05
n <- length(mtcars)
pe <- coef(summary(fit))["am", "Estimate"]
alpha <- 0.05
n <- length(mtcars)
pe <- coef(summary(fitAm))["am", "Estimate"]
fitAm <- lm(mpg ~ am, data = mtcars)
summary(fitAm)$coef
summary(fitAm)$adj.r.squared
alpha <- 0.05
n <- length(mtcars)
pe <- coef(summary(fitAm))["am", "Estimate"]
se <- coef(summary(fitAm))["am", "Std. Error"]
tvalue <- qt(1 - alpha/2, n - 2)
pe + c(-1, 1) * (se * tstat)
alpha <- 0.05
n <- length(mtcars)
pe <- coef(summary(fitAm))["am", "Estimate"]
se <- coef(summary(fitAm))["am", "Std. Error"]
tvalue <- qt(1 - alpha/2, n - 2)
pe + c(-1, 1) * (se * tvalue)
fitAll <- lm(mpg ~ ., data = mtcars)
summary(fitAll)$coef
corCars <- cor(mtcars)
data.frame(Cor.mpg = corCars[,which(names(mtcars)=='mpg')], Cor.wt = corCars[,which(names(mtcars)=='wt')])
corCars <- cor(mtcars)
data.frame(Cor.mpg = corCars[,which(names(mtcars)=='mpg')], Cor.wt = corCars[,which(names(mtcars)=='wt')])
